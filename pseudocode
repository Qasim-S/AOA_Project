# pseudocode for the project

Assuming a dictionary of words has been provided with a function search for searching the word and returning its translation.

INPUT: an input string "s"
OUTPUT: a translated string "translatedText"
Translator(s)
	# counting number of words
	wordCount = loopCount = 0
	while(s[loopCount] != '\0')
		if(s[loopCount] = ' ')
			wordCount = wordCount + 1
		loopCount = loopCount + 1
	
	# creating an array of size wordCount
	# this array will store tuples of the form
	# (translation, part of speech)
	translatedText[wordCount]

	wordCount = loopCount = 0
	word = ""
	while(s[loopCount] != '\0')
		word = word + s[loopCount]
		if(s[loopCount] = ' ')
			# search for the translation in the dictionary
			# search function will cut additional spaces at the end of the word,
			# provide translation and identify part of speech
			# it will return a tuple
			# (translation, part of speech)
			translatedWord, part_of_speech = dictionary.search(word)
			translatedText[wordCount] = (translatedWord, part_of_speech)

		loopCount = loopCount + 1

	# some sort of correctness for order needs to applied to "translatedText" before return because English and Urdu have different sentence structures
	return translatedText
